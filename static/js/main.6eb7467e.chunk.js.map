{"version":3,"sources":["components/PageLinks/PageLinks.module.css","features/authorization/Login/Login.tsx","features/authorization/Registration/Registration.tsx","components/routes/Pages.tsx","components/PageLinks/PageLinks.tsx","components/dev-header/DevHeader.tsx","components/routes/Routes.tsx","App/App.tsx","reportWebVitals.ts","features/authorization/auth-reducer.ts","App/store.ts","index.tsx"],"names":["module","exports","Login","isLoggedIn","useSelector","state","auth","formik","useDispatch","useFormik","initialValues","email","password","rememberMe","validate","values","errors","test","length","onSubmit","resetForm","alert","to","handleSubmit","href","target","placeholder","getFieldProps","touched","style","color","type","Registration","firstName","surname","passwordCheck","console","log","PATH","pages","_id","title","path","exact","page","PageLinks","React","memo","info","props","className","s","link","mappedLinks","map","p","params","DevHeader","mappedRoutes","render","Routes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","value","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eb7467e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"PageLinks_link__2aEvz\"};","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppStateType } from '../../../App/store';\r\n\r\n\r\nexport const Login = () => {\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch();\r\n\r\n    type FormErrorType = {\r\n        email?: string\r\n        password?: string\r\n        rememberMe?: boolean\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Must be 3 characters at least';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm()\r\n            alert(values)\r\n            // dispatch(loginTC(values))\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n    return <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <p>To log in get registered\r\n                <a href={'https://social-network.samuraijs.com/'}\r\n                    target={'_blank'}>here\r\n                </a>\r\n            </p>\r\n            <p>or use common test account credentials:</p>\r\n            <p>Email: free@samuraijs.com</p>\r\n            <p>Password: free</p>\r\n            <input\r\n                placeholder=\"Email\"\r\n                {...formik.getFieldProps('email')}\r\n            />\r\n            {formik.touched.email &&\r\n                formik.errors.email ? <div style={{ color: 'red' }}>{formik.errors.email}</div> : null}\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                {...formik.getFieldProps('password')}\r\n\r\n            />\r\n            {formik.touched.password &&\r\n                formik.errors.password ? <div style={{ color: 'red' }}>{formik.errors.password}</div> : null}\r\n            <input\r\n                placeholder={'Remember me'}\r\n                type=\"checkbox\"\r\n                {...formik.getFieldProps('remeberMe')}\r\n            />\r\n            <button type={'submit'}>Login</button>\r\n        </form>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppStateType } from '../../../App/store';\r\n\r\n\r\nexport const Registration = () => {\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch();\r\n\r\n    type FormErrorType = {\r\n        firstName?: string\r\n        surname?: string\r\n        password?: string\r\n        passwordCheck?: string\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            surname: '',\r\n            password: '',\r\n            passwordCheck: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormErrorType = {};\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm()\r\n            console.log(values);\r\n            // dispatch(loginTC(values))\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n    return <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n\r\n            <input\r\n                placeholder=\"Имя\"\r\n                {...formik.getFieldProps('firstName')}\r\n            />\r\n            <input\r\n                placeholder=\"Фамилия\"\r\n                {...formik.getFieldProps('surname')}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"пароль\"\r\n                {...formik.getFieldProps('password')}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"введите ещё раз пароль\"\r\n                {...formik.getFieldProps('passwordCheck')}\r\n            />\r\n            <button type={'submit'}>Login</button>\r\n        </form>\r\n    </div>\r\n}\r\n","import React, {ReactNode} from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Login } from \"../../features/authorization/Login/Login\";\nimport { Registration } from \"../../features/authorization/Registration/Registration\";\n\n// import LearnPage from \"../../../../cnf-2-fatures/f-3-learn/l-1-ui/LearnPage\";\n// import TestPage from \"../../../../cnf-2-fatures/f-4-file/f-1-ui/TestPage\";\n\nexport type PageType = {\n    _id: number;\n    title: string;\n    path?: string;\n    params?: string;\n    exact?: boolean;\n    page: ReactNode;\n};\n\nexport const PATH = {\n    LOGIN: \"/login\",\n    REGISTER: \"/register\",\n    PROFILE: \"/profile\",\n};\n\nexport const pages: PageType[] = [\n    {_id: 0, title: \"main\", path: \"/\", exact: true, page: <Redirect to={PATH.LOGIN}/>},\n    {_id: 1, title: \"login\", path: PATH.LOGIN, exact: true, page: <Login/>},\n    {_id: 2, title: \"register\", path: PATH.REGISTER, exact: true, page: <Registration/>},\n    // {\n    //     _id: 7, title: \"profile\", path: PATH.PROFILE, exact: true,\n    //     page: <AuthRedirectPage><ProfilePage/></AuthRedirectPage>\n    // },\n    {_id: 9999, title: \"error404\", page: <div>error404</div>}\n];\n","import React from \"react\";\nimport {NavLink, NavLinkProps} from \"react-router-dom\";\nimport s from \"./PageLinks.module.css\";\n\nexport type PageLinksPropsType = NavLinkProps & { info?: string };\n\nexport const PageLinks: React.FC<PageLinksPropsType> = React.memo((\n    {\n        info,\n        ...props\n    }\n) => {\n\n    return <NavLink className={s.link} {...props}/>;\n});\n\n","import React from \"react\";\nimport { pages } from \"../routes/Pages\";\nimport  { PageLinks } from \"../PageLinks/PageLinks\";\n\nconst mappedLinks = pages.map(p => (\n    <PageLinks\n        key={\"navLink-\" + p._id}\n        to={(p.path || \"/error404\") + (p.params ? \"/1\" : \"\")}\n        info={\"navLink-\" + p._id}\n    >\n        {p.title}\n    </PageLinks>\n));\n\nconst DevHeader = () => {\n    return (\n        <>\n            {mappedLinks}\n        </>\n    );\n};\n\nexport default DevHeader;\n","import React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport {PageType, pages} from \"./Pages\";\n\nconst mappedRoutes = pages.map((p: PageType) => (\n    <Route\n        key={\"route-\" + p._id}\n        path={p.path && (p.path + (p.params || \"\"))}\n        exact={p.exact}\n        render={() => p.page}\n    />\n));\n\nconst Routes = () => {\n\n    return (\n        <Switch>\n            {mappedRoutes}\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Login } from '../features/authorization/Login/Login';\nimport { Registration } from '../features/authorization/Registration/Registration';\nimport DevHeader from '../components/dev-header/DevHeader';\nimport { DEV_VERSION } from '../config';\nimport Routes from '../components/routes/Routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {DEV_VERSION && <DevHeader />}\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Dispatch } from 'redux'\r\n\r\n\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (\r\n  state: InitialStateType = initialState,\r\n  action: AuthReducerActionTypes\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'login/SET-IS-LOGGED-IN':\r\n      return { ...state, isLoggedIn: action.value }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n  ({ type: 'login/SET-IS-LOGGED-IN', value } as const)\r\n\r\n\r\n\r\n// types\r\nexport type AuthReducerActionTypes =\r\n  | ReturnType<typeof setIsLoggedInAC>\r\n\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport thunkMiddlewere, { ThunkAction } from 'redux-thunk'\r\nimport thunk from 'redux-thunk'\r\nimport {\r\n  authReducer,\r\n  AuthReducerActionTypes,\r\n} from '../features/authorization/auth-reducer'\r\n\r\nlet rootReducer = combineReducers({\r\n  auth: authReducer,\r\n})\r\n\r\n//store type\r\n// export let store = createStore(rootReducer, applyMiddleware(thunkMiddlewere))\r\n\r\nexport type StoreType = typeof store\r\n\r\ntype RootReducerType = typeof rootReducer\r\n\r\nexport type AppStateType = ReturnType<RootReducerType>\r\nexport type GetAppStateType = () => AppStateType\r\n\r\nexport type AppActionsType = AuthReducerActionTypes\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  AppStateType,\r\n  unknown,\r\n  AppActionsType\r\n>\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './App/store';\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}